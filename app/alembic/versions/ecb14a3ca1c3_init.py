"""init

Revision ID: ecb14a3ca1c3
Revises: 
Create Date: 2022-09-24 20:00:23.349705

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ecb14a3ca1c3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('parking_lot',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('address', sa.String(length=100), nullable=True),
    sa.Column('places', sa.Integer(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('creation_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('modification_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('creation_user', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('modification_user', postgresql.UUID(as_uuid=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('parking_rate',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=True),
    sa.Column('is_preferential', sa.Boolean(), nullable=True),
    sa.Column('parking_lot_id', sa.ARRAY(postgresql.UUID(as_uuid=True)), nullable=True),
    sa.Column('rate_type', sa.Enum('hour', 'period', name='ratetype'), nullable=True),
    sa.Column('total_hours', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('creation_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('modification_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('creation_user', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('modification_user', postgresql.UUID(as_uuid=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('creation_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('modification_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('creation_user', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('modification_user', postgresql.UUID(as_uuid=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('parking_access',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('parking_lot_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('raspberry_key', sa.String(length=30), nullable=True),
    sa.Column('gate_type', sa.Enum('entry', 'exit', name='gatetype'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('creation_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('modification_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('creation_user', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('modification_user', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['parking_lot_id'], ['parking_lot.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('raspberry_key')
    )
    op.create_table('parking_schedule',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('parking_lot_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('days', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('start_time', sa.Time(), nullable=True),
    sa.Column('end_date', sa.Time(), nullable=True),
    sa.Column('is_24_hours', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('creation_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('modification_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('creation_user', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('modification_user', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['parking_lot_id'], ['parking_lot.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('email', sa.String(length=200), nullable=True),
    sa.Column('password', sa.Text(), nullable=True),
    sa.Column('name', sa.String(length=30), nullable=True),
    sa.Column('last_name', sa.String(length=30), nullable=True),
    sa.Column('second_last_name', sa.String(length=30), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('creation_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('modification_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('creation_user', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('modification_user', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('role_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('custormer',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('contract_number', sa.String(length=50), nullable=True),
    sa.Column('contract_date', sa.DateTime(), nullable=True),
    sa.Column('phone_number', sa.String(length=15), nullable=True),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('creation_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('modification_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('creation_user', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('modification_user', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('contract_number'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_table('employee',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('employee_number', sa.String(length=50), nullable=True),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('creation_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('modification_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('creation_user', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('modification_user', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('employee_number')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('employee')
    op.drop_table('custormer')
    op.drop_table('user')
    op.drop_table('parking_schedule')
    op.drop_table('parking_access')
    op.drop_table('role')
    op.drop_table('parking_rate')
    op.drop_table('parking_lot')
    # ### end Alembic commands ###
